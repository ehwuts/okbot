var test_loader = (function () {
	//https://stackoverflow.com/questions/9210542/node-js-require-cache-possible-to-invalidate/14801711#14801711
	function searchCache(moduleName, callback) {
		// Resolve the module identified by the specified name
		var mod = require.resolve(moduleName);

		// Check if the module has been resolved and found within
		// the cache
		if (mod && ((mod = require.cache[mod]) !== undefined)) {
			// Recursively go over the results
			(function traverse(mod) {
				// Go over each of the module's children and
				// traverse them
				mod.children.forEach(function (child) {
					traverse(child);
				});

				// Call the specified callback providing the
				// found cached module
				callback(mod);
			}(mod));
		}
	};
	function purgeCache(moduleName) {
	    // Traverse the cache looking for the files
		// loaded by the specified module name
		searchCache(moduleName, function (mod) {
			delete require.cache[mod.id];
		});

		// Remove cached paths to the module.
		// Thanks to @bentael for pointing this out.
		Object.keys(module.constructor._pathCache).forEach(function(cacheKey) {
			if (cacheKey.indexOf(moduleName)>0) {
				delete module.constructor._pathCache[cacheKey];
			}
		});
	}

	let obj = {
		commands : ['test'],	
		respond : function (cmd, msg, responseFunc) {
			var payload;
			try {
				//console.log(require.cache);
				payload = (() => {
					purgeCache('./test_payload');
					return require('./test_payload')
				})();
				if (payload) {
					payload.deploy(msg.channel.id, responseFunc);
					} else {
						throw 'Failed to initialize test payload.';
					}
			} catch (e) {
				responseFunc(msg.channel.id, 'Encountered error: ' + e);
				console.log('Test Trace: ' + e.stack);
			}
		}
	}
	
	return obj;
})();

module.exports = test_loader;